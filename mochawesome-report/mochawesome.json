{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2020-07-31T16:50:00.014Z",
    "end": "2020-07-31T16:50:01.544Z",
    "duration": 1530,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c7fc88ed-b773-4d7f-9c81-100ea98eff51",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [
        {
          "title": "\"after each\" hook",
          "fullTitle": "\"after each\" hook",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "checkForUnfulfilledExpectations.call(this);\nrecordedExpects = [];",
          "err": {},
          "uuid": "a91fc9a8-478a-47fa-9594-e3e14bc5d1f7",
          "parentUUID": "c7fc88ed-b773-4d7f-9c81-100ea98eff51",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "b1ef9990-a181-4f89-91d7-3dd28c6eb50d",
          "title": "Chakram",
          "fullFile": "/Users/arunkumaraswamy/Documents/projects/Study/Javascript/ChakramAPITesting/test/sample.spec.js",
          "file": "/test/sample.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should provide HTTP specific assertions - Omdb",
              "fullTitle": "Chakram should provide HTTP specific assertions - Omdb",
              "timedOut": false,
              "duration": 410,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var response = await chakram.get(\"https://reqres.in/api/users/2\");\nawait expect(response).to.have.status(200);\n    await expect(response).to.comprise.of.json(\n        {\n            data: {\n                avatar: \"https://s3.amazonaws.com/uifaces/faces/twitter/josephstein/128.jpg\",\n                email: \"janet.weaver@reqres.in\",\n                first_name: \"Janet\",\n                id: 2,\n                last_name: \"Weaver\"\n            },\n            ad: {\n                company: \"StatusCode Weekly\",\n                text: \"A weekly newsletter focusing on software development, infrastructure, the server, performance, and the stack end of things.\",\n                url: \"http://statuscode.org/\"\n            }\n        }\n    );\nreturn chakram.wait();",
              "err": {},
              "uuid": "d92a2bab-c082-4e23-90a9-1c1bcf0b5b01",
              "parentUUID": "b1ef9990-a181-4f89-91d7-3dd28c6eb50d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should provide HTTP specific assertions - 2",
              "fullTitle": "Chakram should provide HTTP specific assertions - 2",
              "timedOut": false,
              "duration": 453,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var response = await chakram.get(\"https://reqres.in/api/users/2\");\nawait expect(response).to.have.status(200);\n_8b7‍.g.console.log(response.body);\nawait expect(response).to.comprise.of.json(\n    {\n        data: {\n            avatar: \"https://s3.amazonaws.com/uifaces/faces/twitter/josephstein/128.jpg\",\n            email: \"janet.weaver@reqres.in\",\n            first_name: \"Janet\",\n            id: 2,\n            last_name: \"Weaver\"\n        },\n        ad: {\n            company: \"StatusCode Weekly\",\n            text: \"A weekly newsletter focusing on software development, infrastructure, the server, performance, and the stack end of things.\",\n            url: \"http://statuscode.org/\"\n        }\n    }\n);\nreturn chakram.wait();",
              "err": {},
              "uuid": "468056f9-94f2-46cf-9be1-f45739d5bb0f",
              "parentUUID": "b1ef9990-a181-4f89-91d7-3dd28c6eb50d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should provide HTTP specific assertions - POST",
              "fullTitle": "Chakram should provide HTTP specific assertions - POST",
              "timedOut": false,
              "duration": 658,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var response = await chakram.post(\"https://reqres.in/api/users\",{\n    name: \"morpheus\",\n    job: \"leader\"\n});\nawait expect(response).to.have.status(201);\n_8b7‍.g.console.log(response.body);\n       await expect(response.body.name).to.equal('morpheus');\n       await expect(response.body.id).to.not.equal(null);\nreturn chakram.wait();",
              "err": {},
              "uuid": "cd90ceec-1baf-45fa-8fae-db293a3d8f2a",
              "parentUUID": "b1ef9990-a181-4f89-91d7-3dd28c6eb50d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d92a2bab-c082-4e23-90a9-1c1bcf0b5b01",
            "468056f9-94f2-46cf-9be1-f45739d5bb0f",
            "cd90ceec-1baf-45fa-8fae-db293a3d8f2a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1521,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}