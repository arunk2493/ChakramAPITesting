{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2020-07-31T17:10:27.880Z",
    "end": "2020-07-31T17:10:29.835Z",
    "duration": 1955,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d440c0b0-3a5a-4131-857a-bf579b91e9a3",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [
        {
          "title": "\"after each\" hook",
          "fullTitle": "\"after each\" hook",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "checkForUnfulfilledExpectations.call(this);\nrecordedExpects = [];",
          "err": {},
          "uuid": "3d6793fb-0111-4263-a1df-73563e8144c9",
          "parentUUID": "d440c0b0-3a5a-4131-857a-bf579b91e9a3",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "ea0f8f0e-7d68-49d8-a38b-f81834fdc134",
          "title": "BDD + Hooks",
          "fullFile": "/Users/arunkumaraswamy/Documents/projects/Study/Javascript/ChakramAPITesting/test/bddhooks.spec.js",
          "file": "/test/bddhooks.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Before API",
              "fullTitle": "BDD + Hooks \"before all\" hook: Before API",
              "timedOut": false,
              "duration": 774,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var response = await chakram.post(\"https://reqres.in/api/users\",{\n    name: \"morpheus\",\n    job: \"leader\"\n});\nawait expect(response).to.have.status(201);\nthingName = await response.body.id;\n_6ba‍.g.console.log(thingName);\nawait expect(response.body.name).to.equal('morpheus');\nawait expect(response.body.id).to.not.equal(null);\nreturn chakram.wait();",
              "err": {},
              "uuid": "9734d2cb-ea9b-426d-9604-04fa52a3cf34",
              "parentUUID": "ea0f8f0e-7d68-49d8-a38b-f81834fdc134",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: update dweet with result",
              "fullTitle": "BDD + Hooks \"after all\" hook: update dweet with result",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('-----XXXX______------')",
              "err": {},
              "uuid": "362b8639-cfca-4c27-9908-fc848b75535e",
              "parentUUID": "ea0f8f0e-7d68-49d8-a38b-f81834fdc134",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should verify the added data",
              "fullTitle": "BDD + Hooks should verify the added data",
              "timedOut": false,
              "duration": 198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const postedData = chakram.get(\"https://reqres.in/api/users/2\");\nexpect(postedData).to.have.status(200);\nreturn chakram.wait();",
              "err": {},
              "uuid": "fd2e680f-b9e2-40e0-bc69-48e79b64d90d",
              "parentUUID": "ea0f8f0e-7d68-49d8-a38b-f81834fdc134",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fd2e680f-b9e2-40e0-bc69-48e79b64d90d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 198,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "da7062cf-fe34-46ab-a8b9-e0050e7be27a",
          "title": "Chakram",
          "fullFile": "/Users/arunkumaraswamy/Documents/projects/Study/Javascript/ChakramAPITesting/test/sample.spec.js",
          "file": "/test/sample.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should provide HTTP specific assertions - Omdb",
              "fullTitle": "Chakram should provide HTTP specific assertions - Omdb",
              "timedOut": false,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var response = await chakram.get(\"https://reqres.in/api/users/2\");\nawait expect(response).to.have.status(200);\n    await expect(response).to.comprise.of.json(\n        {\n            data: {\n                avatar: \"https://s3.amazonaws.com/uifaces/faces/twitter/josephstein/128.jpg\",\n                email: \"janet.weaver@reqres.in\",\n                first_name: \"Janet\",\n                id: 2,\n                last_name: \"Weaver\"\n            },\n            ad: {\n                company: \"StatusCode Weekly\",\n                text: \"A weekly newsletter focusing on software development, infrastructure, the server, performance, and the stack end of things.\",\n                url: \"http://statuscode.org/\"\n            }\n        }\n    );\nreturn chakram.wait();",
              "err": {},
              "uuid": "76ffbefe-1763-408f-952c-e5beccfd688b",
              "parentUUID": "da7062cf-fe34-46ab-a8b9-e0050e7be27a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should provide HTTP specific assertions - 2",
              "fullTitle": "Chakram should provide HTTP specific assertions - 2",
              "timedOut": false,
              "duration": 165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var response = await chakram.get(\"https://reqres.in/api/users/2\");\nawait expect(response).to.have.status(200);\n_8b7‍.g.console.log(response.body);\nawait expect(response).to.comprise.of.json(\n    {\n        data: {\n            avatar: \"https://s3.amazonaws.com/uifaces/faces/twitter/josephstein/128.jpg\",\n            email: \"janet.weaver@reqres.in\",\n            first_name: \"Janet\",\n            id: 2,\n            last_name: \"Weaver\"\n        },\n        ad: {\n            company: \"StatusCode Weekly\",\n            text: \"A weekly newsletter focusing on software development, infrastructure, the server, performance, and the stack end of things.\",\n            url: \"http://statuscode.org/\"\n        }\n    }\n);\nreturn chakram.wait();",
              "err": {},
              "uuid": "0bac1646-1460-4961-a39f-105bc1239f80",
              "parentUUID": "da7062cf-fe34-46ab-a8b9-e0050e7be27a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should provide HTTP specific assertions - POST",
              "fullTitle": "Chakram should provide HTTP specific assertions - POST",
              "timedOut": false,
              "duration": 646,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var response = await chakram.post(\"https://reqres.in/api/users\",{\n    name: \"morpheus\",\n    job: \"leader\"\n});\nawait expect(response).to.have.status(201);\n_8b7‍.g.console.log(response.body);\n       await expect(response.body.name).to.equal('morpheus');\n       await expect(response.body.id).to.not.equal(null);\nreturn chakram.wait();",
              "err": {},
              "uuid": "6b7dea72-66c9-4fa1-8b7b-7204263f7b36",
              "parentUUID": "da7062cf-fe34-46ab-a8b9-e0050e7be27a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "76ffbefe-1763-408f-952c-e5beccfd688b",
            "0bac1646-1460-4961-a39f-105bc1239f80",
            "6b7dea72-66c9-4fa1-8b7b-7204263f7b36"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 973,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}